#pragma once

// begins at 390 nm, with step size of 5, up to 830
float x_bar[] = { 3.77e-03, 9.38e-03, 2.21e-02, 4.74e-02, 8.95e-02, 1.45e-01, 2.04e-01, 2.49e-01, 2.92e-01, 3.23e-01, 3.48e-01, 3.42e-01, 3.22e-01, 2.83e-01, 2.49e-01, 2.22e-01, 1.81e-01, 1.29e-01, 8.18e-02, 4.60e-02, 2.08e-02, 7.10e-03, 2.46e-03, 3.65e-03, 1.56e-02, 4.32e-02, 7.96e-02, 1.27e-01, 1.82e-01, 2.41e-01, 3.10e-01, 3.80e-01, 4.49e-01, 5.28e-01, 6.13e-01, 7.02e-01, 7.97e-01, 8.85e-01, 9.64e-01, 1.05e00, 1.11e00, 1.14e00, 1.15e00, 1.13e00, 1.08e00, 1.01e00, 9.14e-01, 8.14e-01, 6.92e-01, 5.76e-01, 4.73e-01, 3.84e-01, 3.00e-01, 2.28e-01, 1.71e-01, 1.26e-01, 9.22e-02, 6.64e-02, 4.71e-02, 3.29e-02, 2.26e-02, 1.58e-02, 1.10e-02, 7.61e-03, 5.21e-03, 3.57e-03, 2.46e-03, 1.70e-03, 1.19e-03, 8.27e-04, 5.76e-04, 4.06e-04, 2.86e-04, 2.02e-04, 1.44e-04, 1.02e-04, 7.35e-05, 5.26e-05, 3.81e-05, 2.76e-05, 2.00e-05, 1.46e-05, 1.07e-05, 7.86e-06, 5.77e-06, 4.26e-06, 3.17e-06, 2.36e-06, 1.76e-06 };
float y_bar[] = { 4.15e-04, 1.06e-03, 2.45e-03, 4.97e-03, 9.08e-03, 1.43e-02, 2.03e-02, 2.61e-02, 3.32e-02, 4.16e-02, 5.03e-02, 5.74e-02, 6.47e-02, 7.24e-02, 8.51e-02, 1.06e-01, 1.30e-01, 1.54e-01, 1.79e-01, 2.06e-01, 2.38e-01, 2.85e-01, 3.48e-01, 4.28e-01, 5.20e-01, 6.21e-01, 7.18e-01, 7.95e-01, 8.58e-01, 9.07e-01, 9.54e-01, 9.81e-01, 9.89e-01, 9.99e-01, 9.97e-01, 9.90e-01, 9.73e-01, 9.42e-01, 8.96e-01, 8.59e-01, 8.12e-01, 7.54e-01, 6.92e-01, 6.27e-01, 5.58e-01, 4.90e-01, 4.23e-01, 3.61e-01, 2.98e-01, 2.42e-01, 1.94e-01, 1.55e-01, 1.19e-01, 8.98e-02, 6.67e-02, 4.90e-02, 3.56e-02, 2.55e-02, 1.81e-02, 1.26e-02, 8.66e-03, 6.03e-03, 4.20e-03, 2.91e-03, 2.00e-03, 1.37e-03, 9.45e-04, 6.54e-04, 4.56e-04, 3.18e-04, 2.22e-04, 1.57e-04, 1.10e-04, 7.83e-05, 5.58e-05, 3.98e-05, 2.86e-05, 2.05e-05, 1.49e-05, 1.08e-05, 7.86e-06, 5.74e-06, 4.21e-06, 3.11e-06, 2.29e-06, 1.69e-06, 1.26e-06, 9.42e-07, 7.05e-07 };
float z_bar[] = { 1.85e-02, 4.61e-02, 1.10e-01, 2.37e-01, 4.51e-01, 7.38e-01, 1.05e00, 1.31e00, 1.55e00, 1.75e00, 1.92e00, 1.92e00, 1.85e00, 1.66e00, 1.52e00, 1.43e00, 1.25e00, 9.99e-01, 7.55e-01, 5.62e-01, 4.10e-01, 3.11e-01, 2.38e-01, 1.72e-01, 1.18e-01, 8.28e-02, 5.65e-02, 3.75e-02, 2.44e-02, 1.57e-02, 9.85e-03, 6.13e-03, 3.79e-03, 2.33e-03, 1.43e-03, 8.82e-04, 5.45e-04, 3.39e-04, 2.12e-04, 1.34e-04, 8.49e-05, 5.46e-05, 3.55e-05, 2.33e-05, 1.55e-05, 1.05e-05, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00, 0.00e00 };

vec3 wavelength_to_xyz(float power, float lambda)
{
	int i = (lambda - 390.f) / 5.f;
	return power * vec3(x_bar[i], y_bar[i], z_bar[i]);
}

vec3 xyz_to_rgb(vec3 xyz)
{
	vec3 rgb = mat3(
		3.2406, -0.9689,  0.0557,
		-1.5372,  1.8758, -0.2040,
		-0.4986,  0.0415,  1.0570) * xyz;

	float correct = min(min(rgb.x, rgb.y), rgb.z);
	if (correct > 0.f)
		correct = 0;
	rgb = rgb - vec3(correct, correct, correct);
	return rgb;
}